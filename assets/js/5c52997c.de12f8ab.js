"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8174],{8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>r});var i=a(6540);const n={},s=i.createContext(n);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},9918:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"advanced_use_cases/attestation/overview","title":"Overview","description":"Attestation refers to the ability of a security device to prove its own identity and for a relying party to attain details about the security device it was created on, and which manufacturer actually created said device.","source":"@site/docs/advanced_use_cases/attestation/overview.mdx","sourceDirName":"advanced_use_cases/attestation","slug":"/advanced_use_cases/attestation/overview","permalink":"/passkey-workshop/docs/advanced_use_cases/attestation/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/YubicoLabs/passkey-workshop/tree/main/docs/docs/advanced_use_cases/attestation/overview.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Attestation","permalink":"/passkey-workshop/docs/category/attestation"},"next":{"title":"Relying party implementation","permalink":"/passkey-workshop/docs/advanced_use_cases/attestation/relying-party-implementation"}}');var n=a(2467),s=a(8453),o=a(3554),r=a.n(o);const c={sidebar_position:1},d="Overview",h={},l=[{value:"How attestation works",id:"how-attestation-works",level:2},{value:"Before you start",id:"before-you-start",level:2},{value:"Example",id:"example",level:2},{value:"Types of attestation",id:"types-of-attestation",level:2},{value:"None",id:"none",level:3},{value:"Direct",id:"direct",level:3},{value:"Indirect",id:"indirect",level:3},{value:"Enterprise",id:"enterprise",level:3},{value:"Attestation metadata",id:"attestation-metadata",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,n.jsx)(t.p,{children:"Attestation refers to the ability of a security device to prove its own identity and for a relying party to attain details about the security device it was created on, and which manufacturer actually created said device."}),"\n",(0,n.jsx)(t.h2,{id:"how-attestation-works",children:"How attestation works"}),"\n",(0,n.jsx)(t.p,{children:"The attestation of a security device is facilitated by its digital attestation certificate, which exposes details such as its make and model; but more importantly the public key component of a key pair imported by the manufacturer during production. An attestation certificate is always specific to a company or model, for example, all YubiKey 5 series devices created within the same production batch possess the same attestation certificate, and similarly, an attestation certificate is shared amongst all iPhone 12 Pro devices produced in a batch. Ultimately, an attestation can always be used to cryptographically assert that a specific security device is being used when it is registered."}),"\n",(0,n.jsx)(t.p,{children:"It is important to note that WebAuthn strives for an equal balance of security and privacy, and disincentivizes any mechanism that makes security keys uniquely identifiable. As such, in order to preserve user privacy and limit the ability of an RP to identify a user based solely on the attestation certificate presented during registration, FIDO guidance recommends to all manufacturers that each attestation certificate span at least 100,000 distributed devices within any given batch."}),"\n",(0,n.jsx)(t.h2,{id:"before-you-start",children:"Before you start"}),"\n",(0,n.jsx)(t.p,{children:"It is important to be aware that requiring attestation is an invasive policy, especially when used to restrict users' choice of authenticator. For some applications this is necessary; for most it is not. Similarly, attestation does not automatically make your users more secure. Attestation gives you information, but you have to know what to do with that information in order to get a security benefit from it; it is a powerful tool but does very little on its own. Attestation can help retrieve and verify additional information about an authenticator, and enforce some very basic policy based on it, but it is your responsibility to further leverage that information into improved security."}),"\n",(0,n.jsx)(t.p,{children:"When in doubt, err towards being more permissive, because using a passkey is more secure than not using a passkey. It may still be useful to request and store attestation information for future reference - for example, to warn users if security issues are discovered in their authenticators - but we recommend that you do not require a trusted attestation unless you have specific reason to do so."}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.p,{children:"Below is a demonstration of how attestation can be used to enhance the user experience. Notice how without any additional input, the application is able to populate the credential list with information about the credential that the user used to register their initial passkey."}),"\n",(0,n.jsx)(t.p,{children:"Also note the second passkey added to the user's account; some authenticators, especially copyable passkeys, are unable to send attestation. Because of this, there is no attestation to evaluate, so no information can be inferred about the make/model of the key. In this instance we are using TouchID on a Mac, that is leveraging a copyable passkey that can be synched to an iCloud Keychain."}),"\n",(0,n.jsx)(r(),{controls:!0,width:"100%",height:"100%",url:"/passkey-workshop/videos/attestation_1.mp4",style:{marginBottom:"2em"}}),"\n",(0,n.jsx)(t.h2,{id:"types-of-attestation",children:"Types of attestation"}),"\n",(0,n.jsxs)(t.p,{children:["The WebAuthn specification notes a few different options that a relying party can use to convey the type of attestation it wishes to receive, if allowed. This option is set by the ",(0,n.jsx)(t.code,{children:"attestation"})," property in the ",(0,n.jsx)(t.code,{children:"PublicKeyCredentialCreationOptions"})," that is sent during registration."]}),"\n",(0,n.jsx)(t.h3,{id:"none",children:"None"}),"\n",(0,n.jsxs)(t.p,{children:["The option ",(0,n.jsx)(t.code,{children:"none"})," indicates to the client that the relying party has no interest in receiving an attestation statement. The client will still generate and send a passkey, but it will not include any of the information that will indicate the make/model."]}),"\n",(0,n.jsx)(t.h3,{id:"direct",children:"Direct"}),"\n",(0,n.jsxs)(t.p,{children:["The option ",(0,n.jsx)(t.code,{children:"direct"})," indicates to the client that the relying party will accept an attestation statement directly from the authenticator. The client should make no attempt to alter this data, and should directly pass whatever was generated by the authenticator."]}),"\n",(0,n.jsx)(t.p,{children:"This is the default option used in our project."}),"\n",(0,n.jsx)(t.h3,{id:"indirect",children:"Indirect"}),"\n",(0,n.jsxs)(t.p,{children:["The option ",(0,n.jsx)(t.code,{children:"indirect"})," indicates to the client that the relying party will accept an attestation statement, but the client can make its own determination on how to obtain the attestation data. In other words, the client may replace the attestation statement provided by the authenticator with its preferred data."]}),"\n",(0,n.jsx)(t.h3,{id:"enterprise",children:"Enterprise"}),"\n",(0,n.jsxs)(t.p,{children:["The option ",(0,n.jsx)(t.code,{children:"enterprise"})," indicates to the client that the relying party needs an attestation statement from the authenticator that may include authenticator specific information, such as serial number. The previous examples attempt to leverage privacy preserving principles that prevent a relying party from tracking specific authenticators across different service. While attestation should be privacy preserving, there are enterprise use cases where an authenticator needs to present specific information about itself. Note that enterprise attestation can only be used if the authenticator itself has the feature enabled, and the user has consented to allowing the origin to request the information. ",(0,n.jsx)(t.a,{href:"https://developers.yubico.com/WebAuthn/Concepts/Enterprise_Attestation/",children:"More information on enterprise attestation can be found here"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"attestation-metadata",children:"Attestation metadata"}),"\n",(0,n.jsx)(t.p,{children:"Developers should be aware that the attestation statement included with a passkey only sends the minimum amount of information needed to validate the root of trust present on the authenticator. This data includes:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"The AAGUID, which is the unique identifier given to every FIDO2 authenticator"}),"\n",(0,n.jsx)(t.li,{children:"Attestation signature, which can be verified using a manufacturer\u2019s public key."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"If this is the only data that is provided, then how does the relying party identify other device characteristics like model name, interfaces, manufacturer name, and other signals? Also, how is a developer supposed to manage all of this information, are they meant to maintain their own repository of device metadata?"}),"\n",(0,n.jsxs)(t.p,{children:["The FIDO Alliance provides, and stewards the ",(0,n.jsx)(t.a,{href:"https://fidoalliance.org/metadata/",children:"FIDO Metadata Service (MDS)"}),", which is a collection of metadata for authenticators. The MDS can be used to evaluate the root of trust sent with a credential during registration in order to identify the device, and correlate it to a metadata entry containing a variety of different data on the authenticator."]}),"\n",(0,n.jsx)(t.p,{children:"The repository is offered in the form of a BLOB hosted on a FIDO Alliance resource. If your application is connected to an external network, then you can download the BLOB using a cURL request, or you can download and self-host it for non-public facing resources hosted in your environment."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://github.com/Yubico/java-webauthn-server",children:"Yubico's java-webauthn-server library"})," includes support for the MDS, where you are able to download the BLOB, and validate attestation statements."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);