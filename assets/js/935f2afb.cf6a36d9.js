"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Passkey Workshop","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Fundamentals","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a Page","href":"/docs/fundamentals/create-a-page","docId":"fundamentals/create-a-page"},{"type":"link","label":"Create a Document","href":"/docs/fundamentals/create-a-document","docId":"fundamentals/create-a-document"},{"type":"link","label":"Create a Blog Post","href":"/docs/fundamentals/create-a-blog-post","docId":"fundamentals/create-a-blog-post"},{"type":"link","label":"Markdown Features","href":"/docs/fundamentals/markdown-features","docId":"fundamentals/markdown-features"},{"type":"link","label":"Deploy your site","href":"/docs/fundamentals/deploy-your-site","docId":"fundamentals/deploy-your-site"},{"type":"link","label":"Congratulations!","href":"/docs/fundamentals/congratulations","docId":"fundamentals/congratulations"}],"href":"/docs/category/fundamentals"},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture at a glance","href":"/docs/architecture/architecture-at-a-glance","docId":"architecture/architecture-at-a-glance"},{"type":"link","label":"Client application","href":"/docs/architecture/client-app","docId":"architecture/client-app"},{"type":"link","label":"Relying party","href":"/docs/architecture/relying-party","docId":"architecture/relying-party"}],"href":"/docs/category/architecture"},{"type":"link","label":"Deploy project","href":"/docs/deploy","docId":"deploy"},{"type":"category","label":"Relying Party","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API definition","href":"/docs/relying-party/api-def","docId":"relying-party/api-def"},{"type":"link","label":"Data sources and RP configurations","href":"/docs/relying-party/config-and-data","docId":"relying-party/config-and-data"},{"type":"link","label":"Registration flows","href":"/docs/relying-party/reg-flow","docId":"relying-party/reg-flow"},{"type":"link","label":"Authentication flows","href":"/docs/relying-party/auth-flow","docId":"relying-party/auth-flow"}],"href":"/docs/category/relying-party"},{"type":"category","label":"Web client","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"User flows","href":"/docs/web-client/user-flows","docId":"web-client/user-flows"},{"type":"link","label":"API client","href":"/docs/web-client/api-client","docId":"web-client/api-client"},{"type":"link","label":"Registration flows","href":"/docs/web-client/reg-flow","docId":"web-client/reg-flow"},{"type":"link","label":"Authentication flows","href":"/docs/web-client/auth-flow","docId":"web-client/auth-flow"}],"href":"/docs/category/web-client"}]},"docs":{"architecture/architecture-at-a-glance":{"id":"architecture/architecture-at-a-glance","title":"Architecture at a glance","description":"We will start by observing a high level architecture diagram of a standard passkey enabled application. This first diagram outlines the required components of our application. Please note that this diagram does NOT include the core functionality of your application, only the components necessary for passkey and authentication/authorization related actions","sidebar":"tutorialSidebar"},"architecture/client-app":{"id":"architecture/client-app","title":"Client application","description":"The client is the user interface aspect of your application, where your users will interact with your service. In the case of a passkey application, there are two aspects of the client that should be considered: the user interface that you develop, and the ecosystem that the user is on.","sidebar":"tutorialSidebar"},"architecture/relying-party":{"id":"architecture/relying-party","title":"Relying party","description":"A relying party (RP) is an industry term that is used to describe an application that is used to verify the identity of an entity through authentication, and to provide the correct level of authorization based on the permissions granted to the entity.","sidebar":"tutorialSidebar"},"deploy":{"id":"deploy","title":"Deploy project","description":"In this section we are going to deploy the project to your local environment. At the end of this section you should be able to access all of the components that will allow you to test, and further understand the workings of a passkey application.","sidebar":"tutorialSidebar"},"fundamentals/congratulations":{"id":"fundamentals/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template.","sidebar":"tutorialSidebar"},"fundamentals/create-a-blog-post":{"id":"fundamentals/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...","sidebar":"tutorialSidebar"},"fundamentals/create-a-document":{"id":"fundamentals/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:","sidebar":"tutorialSidebar"},"fundamentals/create-a-page":{"id":"fundamentals/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:","sidebar":"tutorialSidebar"},"fundamentals/deploy-your-site":{"id":"fundamentals/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack).","sidebar":"tutorialSidebar"},"fundamentals/markdown-features":{"id":"fundamentals/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Passkey Workshop","description":"Overview","sidebar":"tutorialSidebar"},"relying-party/api-def":{"id":"relying-party/api-def","title":"API definition","description":"This section will discuss the API that defines a client\'s ability to interact with the relying party (RP) application. By the end of this section you should understand best practices for the API that should translate to better comprehension on how the application should behave.","sidebar":"tutorialSidebar"},"relying-party/auth-flow":{"id":"relying-party/auth-flow","title":"Authentication flows","description":"This section will cover the authentication flows for logging in with a passkey.","sidebar":"tutorialSidebar"},"relying-party/config-and-data":{"id":"relying-party/config-and-data","title":"Data sources and RP configurations","description":"In this section we are going to outline some essential utilities that are needed in order to perform passkey functions. This will provide the foundations for our relying party (RP) application that will ensure that the requests/responses from the API are compliant with mainstream platform implementations, and that our application can interact with some form of data source.","sidebar":"tutorialSidebar"},"relying-party/reg-flow":{"id":"relying-party/reg-flow","title":"Registration flows","description":"This section will cover the registration flow for a new passkey. Note that the use of the term registration refers to the creation of a passkey, not the initial registration of a user (which is an entirely different subject).","sidebar":"tutorialSidebar"},"web-client/api-client":{"id":"web-client/api-client","title":"API client","description":"To begin our client implementation we will create an interface that will connect to our relying party API. This interface will allow our React application to make calls to our relying party API, without having to create duplicate code.","sidebar":"tutorialSidebar"},"web-client/auth-flow":{"id":"web-client/auth-flow","title":"Authentication flows","description":"This section will cover the authentication flows for logging in with a passkey.","sidebar":"tutorialSidebar"},"web-client/reg-flow":{"id":"web-client/reg-flow","title":"Registration flows","description":"This section will cover the registration flow for a new passkey. Note that the use of the term registration refers to the creation of a passkey, not the initial registration of a user (which is an entirely different subject).","sidebar":"tutorialSidebar"},"web-client/user-flows":{"id":"web-client/user-flows","title":"User flows","description":"This page will discuss the various user flows that can be used for passkey related functionality in your web application. These flows include","sidebar":"tutorialSidebar"}}}')}}]);