"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1642],{513:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"high_assurance/deploy","title":"Deploy example","description":"In this section, we will deploy the Banking application.","source":"@site/docs/high_assurance/deploy.md","sourceDirName":"high_assurance","slug":"/high_assurance/deploy","permalink":"/passkey-workshop/docs/high_assurance/deploy","draft":false,"unlisted":false,"editUrl":"https://github.com/YubicoLabs/passkey-workshop/tree/main/docs/docs/high_assurance/deploy.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/passkey-workshop/docs/high_assurance/architecture"},"next":{"title":"Relying party","permalink":"/passkey-workshop/docs/category/relying-party-1"}}');var i=t(2467),s=t(8453);const a={sidebar_position:4},l="Deploy example",r={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Deployment configurations",id:"deployment-configurations",level:2},{value:"Deploying the project",id:"deploying-the-project",level:2},{value:"Running the mobile client",id:"running-the-mobile-client",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"deploy-example",children:"Deploy example"})}),"\n",(0,i.jsxs)(n.p,{children:["In this section, we will deploy the Banking application.\nIt uses the same script that was used to ",(0,i.jsx)(n.a,{href:"/docs/deploy",children:"deploy the demo application"}),", but here we need to configure the application a little differently."]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.p,{children:["As before, we need ",(0,i.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"})," to deploy the environment locally.\nBut to use the banking application with high assurance, a FIDO2 security key like a YubiKey is required.\nWe assume you already cloned the repository."]}),"\n",(0,i.jsx)(n.h2,{id:"deployment-configurations",children:"Deployment configurations"}),"\n",(0,i.jsxs)(n.p,{children:["The file ",(0,i.jsx)(n.code,{children:".env"})," will need to be edited for the specific parameters for use in the banking application."]}),"\n",(0,i.jsx)(n.p,{children:"Here is an example configuration with settings relevant to the banking API (other settings can be left intact)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Client applications to deploy\nDEPLOYMENT_CLIENTS=bank\n\n# Domain that identifies the relying party\n# Reference: https://www.w3.org/TR/webauthn-2/#relying-party-identifier\nRP_ID=localhost\n\n# Human readable name that relates to the name of the site listed from the RP_ID\nRP_NAME=PKBank\n\n...\n\n# Allow registrations that don't include some form of trusted attestation\nRP_ALLOW_UNTRUSTED_ATTESTATION=true\n\n# Leverage attestation through the FIDO Metadata Service (MDS)\nRP_ATTESTATION_TRUST_STORE=mds\n\n# Allowed origins for java-app\n# Denotes the origins that can generate a credential that will be accepted by the relying party.\n# This should closely correspond to the domain denoted in the RP_ID. \n# Note that unlike the RP_ID, this value will require the port number.\nRP_ALLOWED_ORIGINS=localhost:8081,localhost:3002\n\n# Spring-Boot framework config for allowed cross-origins domains (CORS)\n# shared between java-app and bank-app\nRP_ALLOWED_CROSS_ORIGINS=localhost:8081,localhost:3002\n\n# Allowed authenticators, referenced by AAGUID. Leave empty to allow any authenticator\nALLOW_LIST_AAGUIDS=73bb0cd4-e502-49b8-9c6f-b59445bf720b,85203421-48f9-4355-9bc8-8a53846e5083,c1f9a0bc-1dd2-404a-b27f-8e29047a43fd\n\n...\n\n# Location of the Bank client\nBANK_CLIENT_URL=http://localhost:3002\n# Location of the the RP API keycloak can connect to for passkey registration/validation\n# Note that this is a backend call so connect to the docker host when deploying on localhost\nRP_API=http://host.docker.internal:8080/v1\n\n\n# bank-react-app HA client configuration\nREACT_APP_BANK_API=http://localhost:8082/v1\nREACT_APP_KEYCLOAK_URL=http://localhost:8081\nREACT_APP_CLIENT_ID=BankApp\n"})}),"\n",(0,i.jsx)(n.p,{children:"Note the differences with the demo application. In particular:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The banking web client is deployed on localhost:3002"}),"\n",(0,i.jsx)(n.li,{children:"The banking API is deployed on localhost:8082"}),"\n",(0,i.jsx)(n.li,{children:"Origin settings have been updated accordingly"}),"\n",(0,i.jsxs)(n.li,{children:["The setting for ",(0,i.jsx)(n.code,{children:"ALLOW_LIST_AAGUIDS"})," has now been set. The AAGUIDS are for the YubiKey 5 Series, but you can change that to match your specific make and model or leave it blank to accept any authenticator."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"deploying-the-project",children:"Deploying the project"}),"\n",(0,i.jsxs)(n.p,{children:["As before, use the deploy scripts (",(0,i.jsx)(n.code,{children:"deploy.sh"})," or ",(0,i.jsx)(n.code,{children:"deploy.ps1"}),") to deploy the application."]}),"\n",(0,i.jsx)(n.p,{children:"To stop, start, or remove the project, use docker compose:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker compose stop\ndocker compose start\ndocker compose down\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-the-mobile-client",children:"Running the mobile client"}),"\n",(0,i.jsx)(n.p,{children:"The workshop repository also includes an iOS native app.\nBecause this app is run on a separate device, you will need to deploy the server components using devtunnel in order for your iOS device to be able to communicate with those components."}),"\n",(0,i.jsxs)(n.p,{children:["Deploying with devtunnel works the same as before. Edit your ",(0,i.jsx)(n.code,{children:".env"})," file and include the following variable:"]}),"\n",(0,i.jsx)(n.p,{children:"DEPLOYMENT_ENVIRONMENT=devtunnel"}),"\n",(0,i.jsxs)(n.p,{children:["Then run the deploy scripts (",(0,i.jsx)(n.code,{children:"deploy.sh"})," or ",(0,i.jsx)(n.code,{children:"deploy.ps1"}),") again."]}),"\n",(0,i.jsx)(n.p,{children:"The deploy script will launch your devtunnel and edit the iOS sources to point to your tunneled endpoints."}),"\n",(0,i.jsx)(n.p,{children:"With that, you should be able to compile and run the mobile client as follows:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Change directory to ",(0,i.jsx)(n.code,{children:"examples/clients/mobile/iOS/PKBank"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Launch project ",(0,i.jsx)(n.code,{children:"PKBank.xcodeproj"})," in Xcode."]}),"\n",(0,i.jsx)(n.li,{children:"Build and Run the project on your iOS device."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);