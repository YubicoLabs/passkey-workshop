openapi: "3.0.0"
info:
  title: Passkey WebAuthn High Assurance API by Yubico
  description: | 
    This REST API allows a developer to interact with a ficticious bank application through any web, mobile, or commandline client
  version: 1.0.2
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers: 
- url: https://{api_endpoint}
  variables:
    api_endpoint:
      default: api.pkbank.io

paths:
  /v1/status:
    get:
      summary: Get API status
      operationId: APIStatus
      responses:
        "200":
          description: API status response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIStatus"
  /v1/accounts:
    get:
      summary: API to list all accounts that belong to a user
      operationId: GetAccountsRequest
      security:
        - OAuth2: []
      responses:
        "200":
          description: Successfully retrieved all user accounts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetailListResponse"
    post:
      summary: Admin API to create a new bank account for user
      operationId: CreateAccountRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
            examples:
              Default:
                $ref: "#/components/examples/CreateAccountRequest-Default"
      security:
        - OAuth2: []
      responses:
        "200":
          description: Create new account response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountResponse"
        "400":
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/account/{accountId}:
    get:
      summary: Returns bank account details by acccountId
      operationId: AccountDetails
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: ID of bank account to return
      security:
        - OAuth2: []
      responses:
        "200":
          description: Successful account details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetailsResponse"
        "400":
          description: Failed request response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/account/{accountId}/transactions:
    get:
      summary: Returns transactions by account ID
      operationId: AccountTransactionList
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: ID of account to fetch transactions
      security:
        - OAuth2: []
      responses:
        "200":
          description: Successful array of transactions for a single account. Empty array [] if no transactions exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTransactionListResponse"
        "400":
          description: Failed request response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new transaction
      operationId: TransactionCreate
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: ID of bank account to return
      requestBody:
        description: Create a transaction
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionCreateRequest"
      security:
        - OAuth2: []
      responses:
        "200":
          description: Successful transaction created response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionCreateResponse"
        "400":
          description: Failed request response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/account/{accountId}/advanced-protection:
    get:
      summary: Get advanced protection status for account
      operationId: AdvancedProtectionStatus
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: ID of account for advanced protection status
      security:
        - OAuth2: []
      responses:
        "200":
          description: Advanced protection status response is (true|false)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdvancedProtectionStatusResponse"
        "400":
          description: Failed request response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update/Set advanced protection status for account
      operationId: UpdateAdvancedProtectionStatus
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: ID of bank account to return
      requestBody:
        description: Update advanced protection status for account
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAdvancedProtectionStatusRequest"
      security:
        - OAuth2: []
      responses:
        "200":
          description: Successful advanced protection status response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAdvancedProtectionStatusResponse"
        "400":
          description: Failed request response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  # Schemas
  schemas:
    APIStatus:
      type: object
      properties:
        status:
          type: string
          example: ok
    Account:
      type: object
      properties:
        accountId:
          type: integer
          example: 1234
        balance:
          type: number
          example: $498.02
        advancedProtection:
          type: boolean
          example: false
    CreateAccountRequest:
      type: object
      properties:
        userName:
          type: string
          example: robert
        userHandle:
          type: string
          example: _Z07XVOop2ZcmWB0lpH_FHochR0
    CreateAccountResponse:
      properties:
        status:
          type: string
          example: created
    AccountDetailsResponse:
      $ref: "#/components/schemas/Account"
    AccountDetailListResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
    AccountTransactionListResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/AccountTransaction"
    AccountTransaction:
      type: object
      properties:
        transactionId:
          type: integer
          example: 49583
        type:
          type: string
          example: transfer
          enum:
            - deposit
            - withdraw
            - transfer
        amount:
          type: number
          example: $500
        transactionDate:
          type: string
          example: 06/19/2023 04:20pm
        description:
          type: string
          example: birthday gift
    TransactionCreateRequest:
      type: object
      properties:
        type:
          type: string
          example: deposit
          enum:
            - deposit
            - withdraw
            - transfer
        amount:
          type: number
          example: $250.75
        description:
          type: string
          example: birthday gift
    TransactionCreateResponse:
      $ref: "#/components/schemas/AccountTransaction"
    AdvancedProtection:
      type: object
      properties:
        accountId:
          type: integer
          example: 1349
        enabled:
          type: boolean
          example: true
    UpdateAdvancedProtectionStatusRequest:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
    AdvancedProtectionStatusResponse:
      $ref: "#/components/schemas/AdvancedProtection"
    UpdateAdvancedProtectionStatusResponse:
      type: object
      properties:
        result:
          type: string
          example: deleted
    AttestationOptionsRequest:
      type: object
      properties:
        userName:
          type: string
          example: janedoe@example.com
        displayName:
          type: string
          example: John Doe
        authenticatorSelection:
          type: object
          properties:
            residentKey:
              type: string
              example: preferred
              enum:
                - preferred
                - discouraged
                - required
                - ""
            authenticatorAttachment:
              type: string
              example: cross-platform
              enum:
                - cross-platform
                - platform
                - ""
            userVerification:
              type: string
              example: preferred
              enum:
                - preferred
                - discouraged
                - required
                - ""
        attestation:
          type: string
          example: direct
          enum:
            - direct
            - enterprise
            - indirect
            - none
    AttestationOptionsResponse:
      type: object
      properties:
        requestId:
          type: string
          example: B-J4odOi9vcV-4TN_gpokEb1f1EI...
        publicKey:
          type: object
          properties:
            rp:
              type: object
              properties:
                name:
                  type: string
                  example: Example Corporation
                id:
                  type: string
                  example: login.example.com
            user:
              type: object
              properties:
                id:
                  type: string
                  example: 4542432
                name:
                  type: string
                  example: janedoe@example.com
                displayName:
                  type: string
                  example: Jane Doe
            challenge:
              type: string
              example: uhUjPNlZfvn7onwuhNdsLPkkE5Fv-lUN
            pubKeyCredParams:
              type: array
              items:
                properties:
                  type:
                    type: string
                    example: public-key
                  alg:
                    type: integer
                    example: -7
            timeout:
              type: integer
              example: 10000
            excludeCredentials:
              type: array
              items:
                properties:
                  type:
                    type: string
                    example: public-key
                  id:
                    type: string
                    example: opQf1WmYAa5au-kk-pUKJIQp...
            authenticatorSelection:
              type: object
              properties:
                residentKey:
                  type: string
                  example: preferred
                  default: preferred
                  enum:
                    - discouraged
                    - preferred
                    - required
                authenticatorAttachment:
                  type: string
                  example: cross-platform
                  default: cross-platform
                  enum:
                    - cross-platform
                    - platform
                userVerification:
                  type: string
                  example: preferred
                  default: preferred
                  enum:
                    - required
                    - preferred
                    - discouraged
            attestation:
              type: string
              example: direct
              default: direct
              enum:
                - none
                - indirect
                - direct
    AttestationResultRequest:
      type: object
      properties:
        requestId:
          type: string
          example: B-J4odOi9vcV-4TN_gpokEb1f1EI...
        makeCredentialResult:
          type: object
          properties:
            id:
              type: string
              example: LFdoCFJSJUHc-c72yraRc_1mDvruywA
            response:
              type: object
              properties:
                clientDataJSON:
                  type: string
                  example: eyJj0OiJIiwidHlwZSI6IndlYmF1dGhyZWF0ZSJ9...
                attestationObject:
                  type: string
                  example: o2NmbXRNAQELBQADgbpNt2IOL4i4z96Kqo1rqSUmonen...
            type:
              type: string
              example: public-key
            clientExtensionResults:
              type: object
              example: {}
    AttestationResultResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        errorMessage:
          type: string
          example: descriptive error message
  # Examples
  examples:
    CreateAccountRequest-Default:
      summary: "Default (Required)"
      value: |-
        {
          "userName": "janedoe@example.com",
          "userHandle": "_Z07XVOop2ZcmWB0lpH_FHochR0"
        }
  # Security
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          # TODO: parameterize
          authorizationUrl: http://localhost:8081/realms/bank/protocol/openid-connect/auth
          tokenUrl: http://localhost:8081/realms/bank/protocol/openid-connect/token
          scopes:
            high_assurance: TODO check if required